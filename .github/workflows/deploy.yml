name: Deploy Spring Boot to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Create target directory on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: mkdir -p ~/springboot-app/target

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "target/*.jar"
          target: "~/springboot-app/target"

      - name: Restart Spring Boot app on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "Checking for existing app process..."
            PID=$(pgrep -f 'java -jar') || true
            if [ -n "$PID" ]; then
              echo "Stopping existing app with PID $PID"
              kill $PID
              sleep 5
            else
              echo "No running app found."
            fi

            echo "Starting Spring Boot app..."
            JAR_FILE=$(ls ~/springboot-app/target/*.jar | head -n 1)
            nohup java -jar "$JAR_FILE" > ~/springboot-app/app.log 2>&1 &
            echo "App started."

            sleep 5
            echo "Last 20 lines of app.log:"
            tail -n 20 ~/springboot-app/app.log



